<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>50</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

hp = 255;
image_speed = 0;
charge = 0;
dir = 0;
do_charge = false;

state_follow = 0;
state_wait = 1;
state_dash = 2;

state = state_follow;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible = !visible;

image_index += 0.25;
if (image_index &gt;= 4)
    image_index = 0;
    
if (instance_exists(obj_player)) {
    switch (state) {
        case (state_follow):
            dir = point_direction(x, y, obj_player.x, obj_player.y);
            x += lengthdir_x(0.5, dir);
            y += lengthdir_y(0.5, dir);
            
            charge++;
            
            if (charge &gt; 90) {
                charge = 0;
                state = state_wait;
            }
                
            break;
            
        case (state_wait):
            charge++;
            
            if (charge &gt; 15) {
                charge = 0;
                if (do_charge) {
                    dir = point_direction(x, y, obj_player.x, obj_player.y);
                    state = state_dash;
                }
                else {
                    for (var shoot_dir = 0; shoot_dir &lt; 360; shoot_dir += 22.5) {
                        var bullet = instance_create(x, y, obj_boss_bullet);
                        bullet.dir = shoot_dir;
                    }
                    state = state_follow;
                }
                do_charge = !do_charge;
            }
            
            break;
        case (state_dash):
            x += lengthdir_x(3, dir);
            y += lengthdir_y(3, dir);
            
            charge++;
            
            if (charge &gt; 20) {
                charge = 0;
                state = state_follow;
            }
                
            break;
    }
}

if (x &lt; 0)
    x += room_width;
else if (x &gt; room_width)
    x -= room_width;
    
if (y &lt; 0)
    y += room_height;
else if (y &gt; room_height)
    y -= room_height;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
