<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(mus_title, 0, true);

option_list = ds_list_create();
ds_list_add(option_list,
    "Start",
    "Continue",
    "Fullscreen",
    "Scale",
    "Quit"
);

saved = file_exists("ao_save");

if (saved)
    selected = 1;
else
    selected = 0;

load = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_up)) {
    audio_play_sound(snd_select, 0, false);
    selected--;
}
if (keyboard_check_pressed(vk_down)) {
    audio_play_sound(snd_select, 0, false);
    selected++;
}

if (selected &lt; 0)
    selected = ds_list_size(option_list) - 1;
if (selected &gt; ds_list_size(option_list) - 1)
    selected = 0;

if (keyboard_check_pressed(ord('A'))) {
    switch (selected) {
        case 0:
            audio_play_sound(snd_confirm, 0, false);
            instance_create(0, 0, obj_game_control);
            break;
        case 1:
            if (saved) {
                audio_play_sound(snd_confirm, 0, false);
                load = true;
                instance_create(0, 0, obj_game_control);
            }
            else
                audio_play_sound(snd_error, 0, false);
            break;
        case 2:
            audio_play_sound(snd_confirm, 0, false);
            with (obj_draw_game)
                event_user(1);
            break;
        case 3:
            audio_play_sound(snd_confirm, 0, false);
            with (obj_draw_game)
                event_user(0);
            break;
        case 4:
            game_end();
            break
        default:
            audio_play_sound(snd_error, 0, false);
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(mus_title);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_title, 0, 0, 0);

draw_set_halign(fa_center);
draw_set_valign(fa_middle);

draw_set_color(c_white);

draw_set_font(fnt_main);

for (var i = 0; i &lt; ds_list_size(option_list); i++) {
    var text = ds_list_find_value(option_list, i);
    
    switch (i) {
        case 2:
            if (window_get_fullscreen())
                text += ": On";
            else
                text += ": Off";
            break;
        case 3:
            text += ": x" + string(obj_draw_game.scale);
            break;
    }
    
    if (i == selected)
        text = "&gt;" + text + "&lt;";
        
    draw_set_alpha(1);
    if (i == 1 &amp;&amp; !saved)
        draw_set_alpha(0.5);
        
    draw_text(32, 33 + 5 * i, text);
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
